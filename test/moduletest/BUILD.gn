# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

group("ark_js_moduletest") {
  testonly = true

  test_list = [
    "allocatearraybuffer",
    "array",
    "arrayforeach",
    "arrayjoin",
    "assignproxy",
    "async",
    "asyncgenerator",
    "bindfunction",
    "bitwiseop",
    "builtins",
    "callframe",
    "calltype",
    "class",
    "compareobjecthclass",
    "concurrent",
    "container",
    "dataproperty",
    "datecase",
    "datecompare",
    "dateparse",
    "dynamicimport",
    "dyninstruction",
    "ecmastringtable",
    "equal",
    "forawaitof",
    "forin",
    "fortest",
    "generator",
    "getunmappedargs",
    "globalaccessor",
    "globalrecord",
    "globalthis",
    "helloworld",
    "instanceofic",
    "jsonparser",
    "ldmodulensbyic",
    "lexicalenv",
    "linkedhashtable",
    "loadicbyvalue",
    "localelowercase",
    "memleakobjectcreate",
    "merge",
    "module",
    "moduleImportJson",
    "moduleUseCjs",
    "multiargs",
    "multiprotoic",
    "negintmin",
    "newobjdynrange",
    "objectcloneproperties",
    "objoperate",
    "promise",
    "protobuf",
    "proxy",
    "regexpcallthrow",
    "require",
    "setobjectwithproto",
    "spreadoperator",
    "stackoverflow",
    "stubbuilder",
    "throwdyn",
    "trycatch",
    "typearray",
    "watch",
    "wrapperclassfunc",
    "yieldstar",
    "esmnestedimportcjs",
  ]

  deps = []
  foreach(test, test_list) {
    deps += [ "${test}:${test}Action" ]
  }

  if (!is_debug) {
    release_test_list = [
      "hugearray",
      "multiconstpoolarray",
      "multiconstpoolclass",
      "multiconstpoolconstructor",
      "multiconstpoolfunc",
      "multiconstpoolobj",
    ]

    foreach(test, release_test_list) {
      deps += [ "${test}:${test}Action" ]
    }
  }
}

group("ark_asm_test") {
  testonly = true

  test_list = [
    "allocatearraybuffer",
    "array",
    "arrayforeach",
    "arrayjoin",
    "asmstackoverflow",
    "assignproxy",
    "async",
    "bindfunction",
    "bitwiseop",
    "builtins",
    "callframe",
    "calltype",
    "class",
    "compareobjecthclass",
    "concurrent",
    "container",
    "dataproperty",
    "dateparse",
    "dynamicimport",
    "dyninstruction",
    "ecmastringtable",
    "equal",
    "forin",
    "fortest",
    "generator",
    "getunmappedargs",
    "globalaccessor",
    "globalrecord",
    "globalthis",
    "helloworld",
    "instanceofic",
    "jsonparser",
    "ldmodulensbyic",
    "lexicalenv",
    "linkedhashtable",
    "loadicbyvalue",
    "module",
    "multiargs",
    "multiprotoic",
    "negintmin",
    "newobjdynrange",
    "objectcloneproperties",
    "objoperate",
    "promise",
    "proxy",
    "regexpcallthrow",
    "setobjectwithproto",
    "spreadoperator",
    "stackoverflow",
    "stubbuilder",
    "throwdyn",
    "trycatch",
    "watch",
    "wrapperclassfunc",
    "yieldstar",
  ]

  deps = []
  foreach(test, test_list) {
    deps += [ "${test}:${test}AsmAction" ]
  }

  if (!is_debug) {
    release_test_list = [
      "hugearray",
      "multiconstpoolarray",
      "multiconstpoolclass",
      "multiconstpoolconstructor",
      "multiconstpoolfunc",
      "multiconstpoolobj",
    ]

    foreach(test, release_test_list) {
      deps += [ "${test}:${test}AsmAction" ]
    }
  }
}

group("ark_asm_single_step_test") {
  testonly = true

  test_list = [
    "allocatearraybuffer",
    "arrayforeach",
    "arrayjoin",
    "asmstackoverflow",
    "assignproxy",
    "async",
    "bindfunction",
    "bitwiseop",
    "callframe",
    "calltype",
    "class",
    "compareobjecthclass",
    "concurrent",
    "container",
    "dataproperty",
    "dynamicimport",
    "dyninstruction",
    "ecmastringtable",
    "forin",
    "fortest",
    "generator",
    "getunmappedargs",
    "globalaccessor",
    "globalrecord",
    "globalthis",
    "helloworld",
    "instanceofic",
    "jsonparser",
    "ldmodulensbyic",
    "lexicalenv",
    "loadicbyvalue",
    "module",
    "multiargs",
    "multiprotoic",
    "negintmin",
    "newobjdynrange",
    "objectcloneproperties",
    "objoperate",
    "promise",
    "proxy",
    "regexpcallthrow",
    "setobjectwithproto",
    "spreadoperator",
    "stackoverflow",
    "stubbuilder",
    "throwdyn",
    "trycatch",
    "watch",
    "yieldstar",
  ]

  deps = []
  foreach(test, test_list) {
    deps += [ "${test}:${test}AsmSingleStepAction" ]
  }

  if (!is_debug) {
    release_test_list = [
      "multiconstpoolarray",
      "multiconstpoolclass",
      "multiconstpoolconstructor",
      "multiconstpoolfunc",
      "multiconstpoolobj",
    ]

    foreach(test, release_test_list) {
      deps += [ "${test}:${test}AsmSingleStepAction" ]
    }
  }
}
