# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

group("ark_js_moduletest") {
  testonly = true
  deps = [
    "allocatearraybuffer:allocatearraybufferAction",
    "array:arrayAction",
    "arrayjoin:arrayjoinAction",
    "async:asyncAction",
    "bindfunction:bindfunctionAction",
    "bitwiseop:bitwiseopAction",
    "callframe:callframeAction",
    "class:classAction",
    "compareobjecthclass:compareobjecthclassAction",
    "container:containerAction",
    "dyninstruction:dyninstructionAction",
    "ecmastringtable:ecmastringtableAction",
    "fortest:fortestAction",
    "generator:generatorAction",
    "getunmappedargs:getunmappedargsAction",
    "globalaccessor:globalaccessorAction",
    "globalrecord:globalrecordAction",
    "globalthis:globalthisAction",
    "helloworld:helloworldAction",
    "lexicalenv:lexicalenvAction",
    "loadicbyvalue:loadicbyvalueAction",
    "module:moduleAction",
    "moduleUseCjs:moduleUseCjsAction",
    "multiargs:multiargsAction",
    "newobjdynrange:newobjdynrangeAction",
    "objectcloneproperties:objectclonepropertiesAction",
    "objoperate:objoperateAction",
    "promise:promiseAction",
    "proxy:proxyAction",
    "regexpcallthrow:regexpcallthrowAction",
    "require:requireAction",
    "spreadoperator:spreadoperatorAction",
    "stackoverflow:stackoverflowAction",
    "throwdyn:throwdynAction",
    "trycatch:trycatchAction",
    "typearray:typearrayAction",
    "watch:watchAction",
    "yieldstar:yieldstarAction",
  ]
  if (!is_debug) {
    deps += [ "weaktransitions:weaktransitionsAction" ]
  }
}

group("ark_asm_test") {
  testonly = true
  deps = [
    "allocatearraybuffer:allocatearraybufferAsmAction",
    "array:arrayAsmAction",
    "arrayjoin:arrayjoinAsmAction",
    "async:asyncAsmAction",
    "bindfunction:bindfunctionAsmAction",
    "bitwiseop:bitwiseopAsmAction",
    "callframe:callframeAsmAction",
    "class:classAsmAction",
    "compareobjecthclass:compareobjecthclassAsmAction",
    "container:containerAsmAction",
    "dyninstruction:dyninstructionAsmAction",
    "ecmastringtable:ecmastringtableAsmAction",
    "fortest:fortestAsmAction",
    "generator:generatorAsmAction",
    "getunmappedargs:getunmappedargsAsmAction",
    "globalaccessor:globalaccessorAsmAction",
    "globalrecord:globalrecordAsmAction",
    "globalthis:globalthisAsmAction",
    "helloworld:helloworldAsmAction",
    "lexicalenv:lexicalenvAsmAction",
    "loadicbyvalue:loadicbyvalueAsmAction",
    "module:moduleAsmAction",
    "multiargs:multiargsAsmAction",
    "newobjdynrange:newobjdynrangeAsmAction",
    "objectcloneproperties:objectclonepropertiesAsmAction",
    "objoperate:objoperateAsmAction",
    "promise:promiseAsmAction",
    "proxy:proxyAsmAction",
    "regexpcallthrow:regexpcallthrowAsmAction",
    "spreadoperator:spreadoperatorAsmAction",
    "stackoverflow:stackoverflowAsmAction",
    "throwdyn:throwdynAsmAction",
    "trycatch:trycatchAsmAction",
    "watch:watchAsmAction",
    "yieldstar:yieldstarAsmAction",
  ]
  if (!is_debug) {
    deps += [
      # "weaktransitions:weaktransitionsAsmAction",
    ]
  }
}
